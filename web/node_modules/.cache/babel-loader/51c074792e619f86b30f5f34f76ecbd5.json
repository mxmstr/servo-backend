{"ast":null,"code":"var _jsxFileName = \"/Users/ericlynch/eclipse-workspace/Servo/web/src/Home.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\nimport { withCookies } from 'react-cookie';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isAuthenticated: false,\n      user: undefined\n    };\n    const cookies = props.cookies;\n    this.state.csrfToken = cookies.get('XSRF-TOKEN');\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/user', {\n      credentials: 'include'\n    });\n    const body = await response.text();\n\n    if (body === '') {\n      this.setState({\n        isAuthenticated: false\n      });\n    } else {\n      this.setState({\n        isAuthenticated: true,\n        user: JSON.parse(body)\n      });\n    }\n  }\n\n  login() {\n    let port = window.location.port ? ':' + window.location.port : '';\n\n    if (port === ':3000') {\n      port = ':8080';\n    }\n\n    window.location.href = '//' + window.location.hostname + port + '/private';\n  }\n\n  logout() {\n    fetch('/api/logout', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'X-XSRF-TOKEN': this.state.csrfToken\n      }\n    }).then(res => res.json()).then(response => {\n      window.location.href = response.logoutUrl + \"?id_token_hint=\" + response.idToken + \"&post_logout_redirect_uri=\" + window.location.origin;\n    });\n  }\n\n  render() {\n    const message = this.state.user ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Welcome, \", this.state.user.name, \"!\") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Please log in to manage your JUG Tour.\");\n    const button = this.state.isAuthenticated ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/groups\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Manage JUG Tour\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"link\",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Logout\")) : React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Login\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, message, button));\n  }\n\n}\n\nexport default withCookies(Home);","map":{"version":3,"sources":["/Users/ericlynch/eclipse-workspace/Servo/web/src/Home.js"],"names":["React","Component","AppNavbar","Link","Button","Container","withCookies","Home","constructor","props","state","isLoading","isAuthenticated","user","undefined","cookies","csrfToken","get","login","bind","logout","componentDidMount","response","fetch","credentials","body","text","setState","JSON","parse","port","window","location","href","hostname","method","headers","then","res","json","logoutUrl","idToken","origin","render","message","name","button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\nimport { withCookies } from 'react-cookie';\n\nclass Home extends Component {\n  state = {\n    isLoading: true,\n    isAuthenticated: false,\n    user: undefined\n  };\n\n  constructor(props) {\n    super(props);\n    const {cookies} = props;\n    this.state.csrfToken = cookies.get('XSRF-TOKEN');\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/user', {credentials: 'include'});\n    const body = await response.text();\n    if (body === '') {\n      this.setState(({isAuthenticated: false}))\n    } else {\n      this.setState({isAuthenticated: true, user: JSON.parse(body)})\n    }\n  }\n\n  login() {\n    let port = (window.location.port ? ':' + window.location.port : '');\n    if (port === ':3000') {\n      port = ':8080';\n    }\n    window.location.href = '//' + window.location.hostname + port + '/private';\n  }\n\n  logout() {\n    fetch('/api/logout', {method: 'POST', credentials: 'include',\n      headers: {'X-XSRF-TOKEN': this.state.csrfToken}}).then(res => res.json())\n      .then(response => {\n        window.location.href = response.logoutUrl + \"?id_token_hint=\" +\n          response.idToken + \"&post_logout_redirect_uri=\" + window.location.origin;\n      });\n  }\n\n  render() {\n    const message = this.state.user ?\n      <h2>Welcome, {this.state.user.name}!</h2> :\n      <p>Please log in to manage your JUG Tour.</p>;\n\n    const button = this.state.isAuthenticated ?\n      <div>\n        <Button color=\"link\"><Link to=\"/groups\">Manage JUG Tour</Link></Button>\n        <br/>\n        <Button color=\"link\" onClick={this.logout}>Logout</Button>\n      </div> :\n      <Button color=\"primary\" onClick={this.login}>Login</Button>;\n\n    return (\n      <div>\n        <AppNavbar/>\n        <Container fluid>\n          {message}\n          {button}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withCookies(Home);"]},"metadata":{},"sourceType":"module"}