{"ast":null,"code":"import _objectSpread from \"/Users/ericlynch/eclipse-workspace/Servo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ericlynch/eclipse-workspace/Servo/web/src/GroupEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { instanceOf } from 'prop-types';\nimport { Cookies, withCookies } from 'react-cookie';\n\nclass GroupEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      name: '',\n      address: '',\n      city: '',\n      stateOrProvince: '',\n      country: '',\n      postalCode: ''\n    };\n    const cookies = props.cookies;\n    this.state = {\n      item: this.emptyItem,\n      csrfToken: cookies.get('XSRF-TOKEN')\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      try {\n        const group = await (await fetch(\"/api/group/\".concat(this.props.match.params.id), {\n          credentials: 'include'\n        })).json();\n        this.setState({\n          item: group\n        });\n      } catch (error) {\n        this.props.history.push('/');\n      }\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let item = _objectSpread({}, this.state.item);\n\n    item[name] = value;\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const _this$state = this.state,\n          item = _this$state.item,\n          csrfToken = _this$state.csrfToken;\n    let url = item.id ? \"/api/group/\".concat(item.id) : \"/api/group/\";\n    await fetch(url, {\n      method: item.id ? 'PUT' : 'POST',\n      headers: {\n        'X-XSRF-TOKEN': this.state.csrfToken,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item),\n      credentials: 'include'\n    });\n    this.props.history.push('/groups');\n  }\n\n  render() {\n    const item = this.state.item;\n    const title = React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, item.id ? 'Edit Group' : 'Add Group');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, title, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: item.name || '',\n      onChange: this.handleChange,\n      autoComplete: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"address\",\n      id: \"address\",\n      value: item.address || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"City\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"city\",\n      id: \"city\",\n      value: item.city || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"col-md-4 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"stateOrProvince\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"State/Province\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"stateOrProvince\",\n      id: \"stateOrProvince\",\n      value: item.stateOrProvince || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      className: \"col-md-5 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"country\",\n      id: \"country\",\n      value: item.country || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      className: \"col-md-3 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Postal Code\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"postalCode\",\n      id: \"postalCode\",\n      value: item.postalCode || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Save\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/groups\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nGroupEdit.propTypes = {\n  cookies: instanceOf(Cookies).isRequired\n};\nexport default withCookies(withRouter(GroupEdit));","map":{"version":3,"sources":["/Users/ericlynch/eclipse-workspace/Servo/web/src/GroupEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","AppNavbar","instanceOf","Cookies","withCookies","GroupEdit","constructor","props","emptyItem","name","address","city","stateOrProvince","country","postalCode","cookies","state","item","csrfToken","get","handleChange","bind","handleSubmit","componentDidMount","match","params","id","group","fetch","credentials","json","setState","error","history","push","event","target","value","preventDefault","url","method","headers","body","JSON","stringify","render","title","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { instanceOf } from 'prop-types';\nimport { Cookies, withCookies } from 'react-cookie';\n\nclass GroupEdit extends Component {\n\n\tstatic propTypes = {\n\t    cookies: instanceOf(Cookies).isRequired\n\t  };\n\t\n\t  emptyItem = {\n\t    name: '',\n\t    address: '',\n\t    city: '',\n\t    stateOrProvince: '',\n\t    country: '',\n\t    postalCode: ''\n\t  };\n\t\n\t  constructor(props) {\n\t    super(props);\n\t    const {cookies} = props;\n\t    this.state = {\n\t      item: this.emptyItem,\n\t      csrfToken: cookies.get('XSRF-TOKEN')\n\t    };\n\t    this.handleChange = this.handleChange.bind(this);\n\t    this.handleSubmit = this.handleSubmit.bind(this);\n\t  }\n\t\n\t  async componentDidMount() {\n\t    if (this.props.match.params.id !== 'new') {\n\t      try {\n\t        const group = await (await fetch(`/api/group/${this.props.match.params.id}`, {credentials: 'include'})).json();\n\t        this.setState({item: group});\n\t      } catch (error) {\n\t        this.props.history.push('/');\n\t      }\n\t    }\n\t  }\n\t\n\t  handleChange(event) {\n\t    const target = event.target;\n\t    const value = target.value;\n\t    const name = target.name;\n\t    let item = {...this.state.item};\n\t    item[name] = value;\n\t    this.setState({item});\n\t  }\n\t\n\t  async handleSubmit(event) {\n\t    event.preventDefault();\n\t    const {item, csrfToken} = this.state;\n\t\n\t    let url = (item.id) ? `/api/group/${item.id}` : `/api/group/`;\n\t    \n\t    await fetch(url, {\n\t      method: (item.id) ? 'PUT' : 'POST',\n\t      headers: {\n\t        'X-XSRF-TOKEN': this.state.csrfToken,\n\t        'Accept': 'application/json',\n\t        'Content-Type': 'application/json'\n\t      },\n\t      body: JSON.stringify(item),\n\t      credentials: 'include'\n\t    });\n\t    this.props.history.push('/groups');\n\t  }\n\n  render() {\n    const {item} = this.state;\n    const title = <h2>{item.id ? 'Edit Group' : 'Add Group'}</h2>;\n\n    return <div>\n      <AppNavbar/>\n      <Container>\n        {title}\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Label for=\"name\">Name</Label>\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\n                   onChange={this.handleChange} autoComplete=\"name\"/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"address\">Address</Label>\n            <Input type=\"text\" name=\"address\" id=\"address\" value={item.address || ''}\n                   onChange={this.handleChange} autoComplete=\"address-level1\"/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"city\">City</Label>\n            <Input type=\"text\" name=\"city\" id=\"city\" value={item.city || ''}\n                   onChange={this.handleChange} autoComplete=\"address-level1\"/>\n          </FormGroup>\n          <div className=\"row\">\n            <FormGroup className=\"col-md-4 mb-3\">\n              <Label for=\"stateOrProvince\">State/Province</Label>\n              <Input type=\"text\" name=\"stateOrProvince\" id=\"stateOrProvince\" value={item.stateOrProvince || ''}\n                     onChange={this.handleChange} autoComplete=\"address-level1\"/>\n            </FormGroup>\n            <FormGroup className=\"col-md-5 mb-3\">\n              <Label for=\"country\">Country</Label>\n              <Input type=\"text\" name=\"country\" id=\"country\" value={item.country || ''}\n                     onChange={this.handleChange} autoComplete=\"address-level1\"/>\n            </FormGroup>\n            <FormGroup className=\"col-md-3 mb-3\">\n              <Label for=\"country\">Postal Code</Label>\n              <Input type=\"text\" name=\"postalCode\" id=\"postalCode\" value={item.postalCode || ''}\n                     onChange={this.handleChange} autoComplete=\"address-level1\"/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n            <Button color=\"secondary\" tag={Link} to=\"/groups\">Cancel</Button>\n          </FormGroup>\n        </Form>\n      </Container>\n    </div>\n  }\n}\n\nexport default withCookies(withRouter(GroupEdit));"]},"metadata":{},"sourceType":"module"}